apply plugin: 'groovy'
apply plugin: 'java'

sourceCompatibility = "1.7"
targetCompatibility = "1.7"

dependencies {
    compile gradleApi()
    compile localGroovy()
}

apply plugin: 'maven-publish'

//源代码打包任务
task sourcesJar(type: Jar) {
    baseName 'test'
    classifier 'sources'//分类器,区分其他jar包
    from sourceSets.main.allSource
}

//文档包任务
task docJar(type: Jar, dependsOn: [javadoc, groovydoc]) {
    baseName 'test'
    classifier 'doc'//分类器,区分其他jar包
    from javadoc.destinationDir, groovydoc.destinationDir
}

//配置工程工件,也就是jar产出的配置
artifacts {
    archives sourcesJar
    archives docJar
}

publishing {
    publications {

        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact docJar

            groupId 'com.wq.plugin'
            artifactId 'ResourceFlavorsPlugin'
            version '2.1.0'
            //pom文件配置
            pom.withXml {
                def root = asNode()
                def licensesNode = root.appendNode('licenses').appendNode('license')
                licensesNode.appendNode('name', 'Apache License, Version 2.0')
                licensesNode.appendNode('url', 'https://www.apache.org/licenses/LICENSE-2.0.txt')
                licensesNode.appendNode('distribution', 'repo')
                licensesNode.appendNode('comments', 'A business-friendly OSS license')
            }
        }

    }
//    repositories {
//        maven {
//            // change to point to your repo, e.g. http://my.org/repo
//            url "../repo"
//        }
//    }
}
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}
apply plugin: 'com.jfrog.bintray'
bintray {
    user = 'mrqatom'
//    key = userkey
    //上传的内容
    publications = ['mavenJava']
    pkg {
        repo = 'define_flavor'//需要上传的仓库名
        name = 'resourceflavor'//上传到jcenter的项目名
        publish = true
        licenses = ['Apache-2.0']//开源许可
        //这里的地址是不会验证的,随便输入都可以,不配置也可以
        vcsUrl = 'https://github.com/mrqatom/ChangeResourceDemo'
        version {
            name = this.version//使用外面的version
            desc = 'to change resource file when assemble'
            released = new Date()
            vcsTag =this.version//版本控制里面的版本控制,比如svn,git
        }
    }
}