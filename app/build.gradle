apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
def config = rootProject.ext

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.wq.andoidlearning"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.android.support:design:29.+'
    implementation 'com.ashokvarma.android:bottom-navigation-bar:2.0.5'

    implementation config.dependencies["dagger"]
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    annotationProcessor config.dependencies["dagger-compiler"]

    implementation config.dependencies["retrofit"]
    implementation config.dependencies["retroft-converter"]
    implementation config.dependencies["retrofit-adapter"]

    implementation config.dependencies['rxJava']
    implementation config.dependencies['rxAndroid']

    implementation config.dependencies["arouter"]
    implementation project(":lib_base")
    if (isNeedHomeModule.toBoolean()) {
        implementation project(":module_home")
    }
    if (isNeedOtherModule.toBoolean()) {
        implementation project(":module_other")
    }
    if (isNeedStoreModule.toBoolean()) {
        implementation project(":module_store")
    }

    implementation 'com.github.bumptech.glide:glide:4.6.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'
    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation project(':apt')
    implementation project(':inject_api')
    //gradle3.0以上apt的实现方式
    annotationProcessor project(':processor')
    //快速生成.java文件的库
    implementation 'com.squareup:javapoet:1.8.0'
}
repositories {
    mavenCentral()
}
